import{_ as f,r as u,v as i,x as e,C as m,z as _,A as g,D as A,E as y,F as S,y as o,G as x,H as D,I as p,g as M,t as n}from"./dcdCVEkQ.js";const N={class:"wrapper"},b={class:"margins"},T={class:"mb-4"},R={class:"flex justify-end mt-4"},E={key:0,class:"mt-6"},k={class:"sub-heading"},C={class:"mac-table"},P={key:1,class:"error-message mt-4"},w={__name:"DNSlookup",setup(I){const d=u(""),s=u([]),r=u(""),v=async()=>{s.value=[],r.value="";try{const t=await $fetch("/api/dnsLookup",{method:"POST",body:{url:d.value}});if(!t||!t.data)throw new Error("No DNS records found for this domain");t.data.A&&t.data.A.forEach(a=>{s.value.push({type:"A",value:a.address,ttl:a.ttl})}),t.data.AAAA&&t.data.AAAA.forEach(a=>{s.value.push({type:"AAAA",value:a.address,ttl:a.ttl})}),t.data.CNAME&&t.data.CNAME.forEach(a=>{s.value.push({type:"CNAME",value:a.cname,ttl:a.ttl})}),t.data.MX&&t.data.MX.forEach(a=>{s.value.push({type:"MX",value:a.exchange,ttl:a.priority})}),t.data.NS&&t.data.NS.forEach(a=>{s.value.push({type:"NS",value:a.ns,ttl:a.ttl})}),t.data.TXT&&t.data.TXT.forEach(a=>{s.value.push({type:"TXT",value:a.text,ttl:a.ttl})}),t.data.SOA&&s.value.push({type:"SOA",value:`${t.data.SOA.mname} ${t.data.SOA.rname}`,ttl:t.data.SOA.ttl}),t.data.SRV&&t.data.SRV.forEach(a=>{s.value.push({type:"SRV",value:`${a.priority} ${a.weight} ${a.port} ${a.target}`,ttl:a.ttl})}),t.data.PTR&&t.data.PTR.forEach(a=>{s.value.push({type:"PTR",value:a.ptrdname,ttl:a.ttl})}),t.data.SPF&&t.data.SPF.forEach(a=>{s.value.push({type:"SPF",value:a.text,ttl:a.ttl})}),t.data.DKIM&&t.data.DKIM.forEach(a=>{s.value.push({type:"DKIM",value:a.text,ttl:a.ttl})}),t.data.DMARC&&t.data.DMARC.forEach(a=>{s.value.push({type:"DMARC",value:a.text,ttl:a.ttl})})}catch(t){r.value=t.message||"An error occurred while fetching DNS records."}};return(t,a)=>{const c=M("router-link");return n(),i("div",N,[e("div",b,[a[5]||(a[5]=e("h2",{class:"sub-heading"},"DNS Lookup Tool",-1)),e("form",{onSubmit:m(v,["prevent"])},[e("div",T,[e("div",R,[_(c,{to:"/",class:"home-button"},{default:g(()=>a[1]||(a[1]=[e("button",{class:"action-button"},"Home",-1)])),_:1})]),a[2]||(a[2]=e("label",{class:"block mb-1 gradient__text"},"Domain:",-1)),A(e("input",{type:"text","onUpdate:modelValue":a[0]||(a[0]=l=>d.value=l),class:"input-field",placeholder:"enter a domain",required:""},null,512),[[y,d.value]])]),a[3]||(a[3]=e("button",{type:"submit",class:"action-button gradient__button"},"Lookup DNS Records",-1))],32),a[6]||(a[6]=S('<div class="record-types mt-4" data-v-92573548><h3 class="sub-heading" data-v-92573548>Record Types</h3><ul class="record-list" data-v-92573548><li data-v-92573548><span class="gradient__text" data-v-92573548>A:</span> Maps a domain to an IPv4 address.</li><li data-v-92573548><span class="gradient__text" data-v-92573548>AAAA:</span> Maps a domain to an IPv6 address.</li><li data-v-92573548><span class="gradient__text" data-v-92573548>CNAME:</span> Canonical name record that aliases one domain to another.</li><li data-v-92573548><span class="gradient__text" data-v-92573548>MX:</span> Mail exchange record that specifies the mail server for the domain.</li><li data-v-92573548><span class="gradient__text" data-v-92573548>NS:</span> Name server record that indicates which server is authoritative for the domain.</li><li data-v-92573548><span class="gradient__text" data-v-92573548>TXT:</span> Text record that can hold arbitrary text data for various uses, such as verification.</li><li data-v-92573548><span class="gradient__text" data-v-92573548>SOA:</span> Start of authority record that provides information about the domain&#39;s DNS zone.</li><li data-v-92573548><span class="gradient__text" data-v-92573548>SRV:</span> Service record that specifies the location of servers for specified services.</li><li data-v-92573548><span class="gradient__text" data-v-92573548>PTR:</span> Pointer record used for reverse DNS lookups, mapping an IP address to a domain name.</li><li data-v-92573548><span class="gradient__text" data-v-92573548>SPF:</span> Sender Policy Framework record that defines which mail servers are permitted to send email on behalf of the domain.</li><li data-v-92573548><span class="gradient__text" data-v-92573548>DKIM:</span> DomainKeys Identified Mail record that provides a method for validating the authenticity of email messages.</li><li data-v-92573548><span class="gradient__text" data-v-92573548>DMARC:</span> Domain-based Message Authentication, Reporting, and Conformance record that helps protect against email spoofing.</li></ul></div>',1)),s.value.length?(n(),i("div",E,[e("h3",k,"DNS Records for "+o(d.value),1),e("table",C,[a[4]||(a[4]=e("thead",null,[e("tr",null,[e("th",null,"Type"),e("th",null,"Record"),e("th",null,"TTL")])],-1)),e("tbody",null,[(n(!0),i(x,null,D(s.value,(l,h)=>(n(),i("tr",{key:h},[e("td",null,o(l.type),1),e("td",null,o(l.value),1),e("td",null,o(l.ttl),1)]))),128))])])])):p("",!0),r.value?(n(),i("div",P,o(r.value),1)):p("",!0)])])}}},X=f(w,[["__scopeId","data-v-92573548"]]);export{X as default};
