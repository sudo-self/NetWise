{"file":"ip-toolkit-CmVAB7Ii.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAuHM,UAAA,WAAW,IAAI,EAAE;AACjB,UAAA,UAAU,IAAI,EAAE;AAChB,UAAA,YAAY,IAAI,EAAE;AAClB,UAAA,SAAS,IAAI,EAAE;AACf,UAAA,mBAAmB,IAAI,IAAI;AAC3B,UAAA,UAAU,IAAI,EAAE;AAChB,UAAA,kBAAkB,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../pages/ip-toolkit.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <div class=\"margins\">\n      <div class=\"header\">\n        <h1 class=\"heading\">IP Toolkit</h1>\n       \n        <router-link to=\"/\" class=\"home-button\">\n          <button class=\"action-button\">Home</button>\n        </router-link>\n      </div>\n      <p class=\"description\">check, lookup, and convert IPs to other formats.</p>\n\n      <div class=\"toolkit\">\n       \n        <div class=\"tool\">\n          <h2 class=\"tool-title\">Check Public IP</h2>\n          <p class=\"tool-description\">Find out your current public IP address.</p>\n          <button class=\"action-button\" @click=\"fetchPublicIP\">Check IP</button>\n          <p v-if=\"publicIP\" class=\"result\">Your Public IP: <span class=\"gradient__text\">{{ publicIP }}</span></p>\n        </div>\n\n     \n        <div class=\"tool\">\n          <h2 class=\"tool-title\">IP Lookup</h2>\n          <p class=\"tool-description\">Look up information about a specific IP address.</p>\n          <input v-model=\"ipInput\" type=\"text\" placeholder=\"Enter IP Address\" class=\"ip-input\" />\n          <button class=\"action-button\" @click=\"lookupIP\">Lookup IP</button>\n          <p v-if=\"ipInfo\" class=\"result\">IP Info: <span class=\"gradient__text\">{{ ipInfo }}</span></p>\n          <p v-if=\"ipError\" class=\"error-message\">{{ ipError }}</p>\n        </div>\n\n        <!-- IP Converter Tool -->\n        <div class=\"tool\">\n          <h2 class=\"tool-title\">IP Converter</h2>\n          <p class=\"tool-description\">Convert IPv4 address to different formats.</p>\n          <input v-model=\"ipv4Input\" type=\"text\" placeholder=\"Enter IPv4 Address\" class=\"ip-input\" />\n          <button class=\"action-button\" @click=\"convertIP\">Convert IP</button>\n          \n          <div class=\"converter-results\" v-if=\"convertedResults\">\n            <p><strong>Decimal:</strong> <span class=\"gradient__text\">{{ convertedResults.decimal }}</span></p>\n            <p><strong>Hexadecimal:</strong> <span class=\"gradient__text\">{{ convertedResults.hex }}</span></p>\n            <p><strong>Binary:</strong> <span class=\"gradient__text\">{{ convertedResults.binary }}</span></p>\n            <p><strong>IPv6:</strong> <span class=\"gradient__text\">{{ convertedResults.ipv6 }}</span></p>\n            <p><strong>IPv6 (short):</strong> <span class=\"gradient__text\">{{ convertedResults.ipv6Short }}</span></p>\n          </div>\n          <p v-if=\"conversionError\" class=\"error-message\">{{ conversionError }}</p>\n        </div>\n\n\n        <div class=\"tool\">\n          <h2 class=\"tool-title\">IP Classes</h2>\n          <p class=\"tool-description\">Classes, Ranges, and Uses.</p>\n          <table class=\"ip-classes-table\">\n            <thead>\n              <tr>\n                <th>Class</th>\n                <th>Range</th>\n                <th>Use</th>\n                <th>Public/Private</th>\n                <th>Potential Addresses</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>A</td>\n                <td>1.0.0.0 to 126.0.0.0</td>\n                <td>Large networks, unicast</td>\n                <td>Public</td>\n                <td>16,777,216</td>\n              </tr>\n              <tr>\n                <td>B</td>\n                <td>128.0.0.0 to 191.255.0.0</td>\n                <td>Medium networks, unicast</td>\n                <td>Public</td>\n                <td>65,536</td>\n              </tr>\n              <tr>\n                <td>C</td>\n                <td>192.0.0.0 to 223.255.255.0</td>\n                <td>Small networks, unicast (small businesses)</td>\n                <td>Public</td>\n                <td>256</td>\n              </tr>\n              <tr>\n                <td>D</td>\n                <td>224.0.0.0 to 239.255.255.255</td>\n                <td>Multicast</td>\n                <td>Public</td>\n                <td>N/A</td>\n              </tr>\n              <tr>\n                <td>E</td>\n                <td>240.0.0.0 to 255.255.255.255</td>\n                <td>Reserved for future use</td>\n                <td>Reserved</td>\n                <td>N/A</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n      </div>\n    </div>\n\n\n    <footer class=\"margins footer\">\n      <div class=\"social\">\n        <a href=\"https://x.com/ilostmyipad\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"hover-underline-animation\">\n          <span class=\"gradient__text\">@iLostmyipad</span>\n        </a>\n      </div>\n    </footer>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue';\n\nconst publicIP = ref('');\nconst ipInput = ref('');\nconst ipv4Input = ref('');\nconst ipInfo = ref('');\nconst convertedResults = ref(null);\nconst ipError = ref('');\nconst conversionError = ref('');\n\n\nconst fetchPublicIP = async () => {\n  try {\n    const response = await fetch('https://api.ipify.org?format=json');\n    const data = await response.json();\n    publicIP.value = data.ip;\n  } catch (error) {\n    publicIP.value = '';\n    console.error('Error fetching public IP:', error);\n  }\n};\n\n\nconst lookupIP = async () => {\n  const ip = ipInput.value.trim(); \n\n  if (!ip) {\n    ipError.value = 'Please enter an IP address.';\n    return;\n  }\n\n  ipError.value = '';\n  console.log('Looking up IP:', ip);\n  \n  try {\n    const response = await fetch(`https://ipinfo.io/${ip}/json`);\n    console.log('IP Lookup Response:', response);\n\n    if (!response.ok) {\n      throw new Error('IP address not found or invalid.');\n    }\n\n    const data = await response.json();\n    console.log('IP Info Data:', data);\n    ipInfo.value = JSON.stringify(data, null, 2); \n  } catch (error) {\n    ipInfo.value = '';\n    ipError.value = error.message || 'Error looking up IP address.';\n    console.error('Error looking up IP:', error);\n  }\n};\n\n\nconst convertIP = () => {\n  const ip = ipv4Input.value.trim(); \n  console.log('Converting IP:', ip);\n\n  if (!isValidIPv4(ip)) {\n    conversionError.value = 'Please enter a valid IPv4 address.';\n    convertedResults.value = null;\n    return;\n  }\n\n  const parts = ip.split('.').map(Number);\n  convertedResults.value = {\n    decimal: parts.reduce((acc, part) => (acc << 8) + part, 0),\n    hex: parts.map(part => part.toString(16).padStart(2, '0')).join(''),\n    binary: parts.map(part => part.toString(2).padStart(8, '0')).join('.'),\n    ipv6: convertToIPv6(ip),\n    ipv6Short: shortenIPv6(convertToIPv6(ip)),\n  };\n  console.log('Converted Results:', convertedResults.value);\n  conversionError.value = '';\n};\n\n\nconst isValidIPv4 = (ip) => {\n  const parts = ip.split('.');\n  return parts.length === 4 && parts.every(part => {\n    const num = Number(part);\n    return num >= 0 && num <= 255 && String(num) === part;\n  });\n};\n\nconst convertToIPv6 = (ip) => {\n  const parts = ip.split('.').map(Number);\n  return `::ffff:${parts.map(part => part.toString(16).padStart(2, '0')).join('')}`;\n};\n\n\nconst shortenIPv6 = (ipv6) => {\n  return ipv6.replace(/(:|^)([0]{1,3})/g, '::').replace(/:0+/g, ':').replace(/:0/g, ':').replace(/:$/g, '').replace(/::+/g, '::');\n};\n</script>\n\n\n<style scoped>\n\nbody {\n  background-color: #0c0a09; \n  margin: 0; \n  color: #000; \n}\n\n.wrapper {\n  background-color: #0c0a09;\n  color: #fff;\n  padding: 2rem;\n  border-radius: 0px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n}\n\n.margins {\n  padding-left: 1rem;\n  padding-right: 1rem;\n}\n\n.heading {\n  font-size: 2rem;\n  margin-bottom: 1rem;\n}\n\n.description {\n  font-size: 1.25rem;\n}\n\n.toolkit {\n  margin-top: 2rem;\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n}\n\n.tool {\n  background-color: #1f2937;\n  padding: 1.5rem;\n  border-radius: 10px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);\n}\n\n.tool-title {\n  font-size: 1.5rem;\n  margin-bottom: 0.5rem;\n}\n\n.tool-description {\n  margin-bottom: 1rem;\n}\n\n.ip-input {\n  padding: 0.5rem;\n  border: none;\n  border-radius: 5px;\n  width: calc(100% - 1rem);\n  margin-bottom: 1rem;\n  color: #000;\n}\n\n.action-button {\n  background-color: #12a87b;\n  color: white;\n  padding: 0.75rem 1.5rem;\n  border-radius: 0.5rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  transition: background-color 0.3s ease;\n  bottom: 5px;\n}\n\n.action-button:hover {\n  background-color: #0fcf97;\n}\n\n.result {\n  margin-top: 1rem;\n  font-size: 1rem;\n  color: #5bf3c7;\n}\n\n.error-message {\n  margin-top: 1rem;\n  color: #e74c3c;\n}\n\n.gradient__text {\n  background: linear-gradient(90deg, #7bceb6 10%, #12a87b 40%, #0fcf97 60%, #7bceb6 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n}\n\n.footer {\n  color: #444;\n  padding-top: 1rem;\n  margin-top: 2rem;\n  text-align: center;\n}\n\n.social a {\n  text-decoration: none;\n  color: #000;\n}\n\n.hover-underline-animation {\n  position: relative;\n  display: inline-block;\n}\n\n.hover-underline-animation:after {\n  content: \"\";\n  background: #12a87b;\n  height: 2px;\n  left: 50%;\n  position: absolute;\n  transition: all 0.3s ease;\n  width: 0;\n}\n\n.hover-underline-animation:hover:after {\n  left: 0;\n  width: 100%;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center; \n}\n\n.home-button {\n  margin-left: auto; \n}\n\n\n.table-container {\n  overflow-x: auto;\n}\n\n.ip-classes-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 1rem;\n}\n\n.ip-classes-table th,\n.ip-classes-table td {\n  border: 1px solid #ccc;\n  padding: 0.5rem;\n  text-align: left;\n}\n\n.ip-classes-table th {\n  background-color: #1f2937;\n  color: #fff;\n}\n\n.ip-classes-table tr:nth-child(even) {\n  background-color: #2d3748;\n}\n\n@media (max-width: 768px) {\n  .ip-classes-table th:nth-child(4),\n  .ip-classes-table th:nth-child(5),\n  .ip-classes-table td:nth-child(4),\n  .ip-classes-table td:nth-child(5) {\n    display: none;\n  }\n}\n\n</style>\n"],"version":3}